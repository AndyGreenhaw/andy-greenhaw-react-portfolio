[
    {
        "id": 1,
        "name": "Pandemic Tracker",
        "thumb": "./assets/pandemicTrackerHeroGIF.gif",
        "link": "https://vast-eyrie-87899.herokuapp.com/globe",
        "github": "https://github.com/AndyGreenhaw/global-pandemic-tracker",
        "description": "The Pandemic Tracker monitors and visualizes active Covid-19 cases, recoveries and deaths around the world. I used the John Hopkins University Coronavirus API to pull Covid-19 data and used React Globe to present the statistics as a 3D bar graph covering an interactive planet Earth. Click on any location to see an up-to-date situational analysis of Covid-19 in the area. Once I've coded the logic, I plan to expand this app to track additional viruses and diseases, and I would also like to feature geo-based, disease-related Covid-19 news articles for each country.",
        "alt": "Andy's Weather App"
    },   
    {
        "id": 2,
        "name": "React Weather App",
        "thumb": "andy-greenhaw-react-portfolio/assets/thumbnails/weatherdashboard.png",
        "link": "https://andygreenhaw.github.io/06-Server-Side-APIs-Weather-Dashboard/",
        "github": "https://github.com/AndyGreenhaw/react-weather-app",
        "description": "This weather app was created in React using JavaScript, local storage, and the Open Weather API. Users can submit the name or zip code of a city, and the app provides a breakdown of the current weather conditions, temperature, and wind direction and speed. The weather app also provides forecast data for the next six days while emphasizing conditions for the upcoming weekend. I am in the process of adding new functionality, including a line graph for hourly weather developments and more in-depth forecasts. ",
        "alt": "Andy's Weather App"
    },
    {
        "id": 3,
        "name": "Blogger App",
        "thumb": "andy-greenhaw-react-portfolio/assets/thumbnails/notetaker.png",
        "link": "https://shielded-savannah-98558.herokuapp.com/notes",
        "github": "https://github.com/AndyGreenhaw/blogger-app-prototype",
        "description": "I originally created this as a note-taker app but I am now repurposing it as a blogger app that primarily encompasses jQuery, Express, HTML and CSS. It covers all the CRUD functionality, enabling users to create and save articles, review articles, update articles, and delete articles. Eventually, the app will enable the user to publish articles in a formatted template they can then customize, similar to other blogging platforms. The code works as a nice skeleton template to launch a functioning blog. My next plan for this app is to improve the CSS and add more pizzazz to make it more attractive for users.",
        "alt": "Andy's Note Taker"
    },
    {
        "id": 4,
        "name": "Daily Planner",
        "thumb": "andy-greenhaw-react-portfolio/assets/thumbnails/dayplanner.png",
        "link": "https://andygreenhaw.github.io/05-Third-Party-APIs-Work-Day-Scheduler/",
        "github": "https://github.com/AndyGreenhaw/05-Third-Party-APIs-Work-Day-Scheduler",
        "description": "This daily planner application was created using JavaScript, HTML, CSS, and local Web browser storage. The app enables users to enter notes or plans for the day in a time block that saves the information using local storage. By clicking the save button, the note remains in the block after the user refreshes the page. The timing logic is written to color green blocks for future hours, red blocks for the present hour, and grey blocks for past hours. I plan to expand this app as a two-year planner.",
        "alt": "Andy's Day Planner"
    }, 
    {
        "id": 5,
        "name": "BookShelf App",
        "thumb": "andy-greenhaw-react-portfolio/assets/thumbnails/bookshelf.png",
        "link": "https://bookshelf-borrow-books.herokuapp.com/",
        "github": "https://github.com/tesssapierce/BookShelf-Public-Library-Online-Rental-System-Javascript-Express-MySQL-Sequelize",
        "description": "I worked with a team of developers to create this social media book-borrowing website that utilizes several computing languages, including JavaScript, Handlebars, SQL and others. After creating an account, users can 1) post books they'd like to loan to other users and 2) borrow books other users are lending from their profiles. Enter the ISBN number from the book you want to post and the Goodreads API will pull all the data (including the cover image) to display on your profile for other users to borrow. We plan to expand this by allowing users to post books by simply scanning the barcode.",
        "alt": "Andy's BookSelf App"
    },
    {
        "id": 6,
        "name": "Snake Game",
        "thumb": "andy-greenhaw-react-portfolio/assets/thumbnails/budget.png",
        "link": "https://sleepy-caverns-80492.herokuapp.com/",
        "github": "https://github.com/AndyGreenhaw/pwa-budget-app",
        "description": "I am in the process of building this snake game to practice my interactive coding skills in React. The game works the same way as the old school cell phone app where your snake is constantly moving and you control the snake using left/right keys to make your snake eat square-shaped apples. My primary focus now is to provide the user with an intro splash page that provides instructions and high scores for the game. I am also building the functionality for a high score page to record your points and initials after each attempt.",
        "alt": "Andy's Budget App"
    },
    {
        "id": 7,
        "name": "Budget App",
        "thumb": "andy-greenhaw-react-portfolio/assets/thumbnails/burger.png",
        "link": "https://sleepy-caverns-80492.herokuapp.com/",
        "github": "https://github.com/AndyGreenhaw/pwa-budget-app",
        "description": "I created this progressive-web app (PWA) budget application that tracks income and expenses over time using MongoDB to store data. The user enters an amount, adds a short description for the transaction, and clicks whether the transaction should be counted as income or an expense. The app logs each transaction and presents the total balance along with a visual line graph that charts the fluctuation of your total balance.",
        "alt": "Andy's Budget App"
    },
    {
        "id": 8,
        "name": "Employee Directory",
        "thumb": "andy-greenhaw-react-portfolio/assets/thumbnails/theoffice.png",
        "link": "https://andygreenhaw.github.io/19-react-employee-directory/",
        "github": "https://andygreenhaw.github.io/19-react-employee-directory/",
        "description": "I created this employee directory app using React with placeholder characters based off of the television sitcom The Office. This was my first React project so the functionality is extremely basic: you can fire (delete) employees or sort them into alphabetical order. But this skeleton layout could easily be repurposed and expanded to include additional functionality, an interactive breakdown of each employee, visual graphs to coincide with progress, revenue, or costs, and even a fresh design that coincides with any branding.",
        "alt": "Andy's Employee Directory"
    },
    {
        "id": 9,
        "name": "Password Generator",
        "thumb": "andy-greenhaw-react-portfolio/assets/thumbnails/password.png",
        "link": "https://andygreenhaw.github.io/03-JavaScript-Password-Generator/",
        "github": "https://github.com/AndyGreenhaw/03-JavaScript-Password-Generator",
        "description": "This was my first JavaScript project, which involved much more back-end logic than front-end design. The app basically enables users to set parameters for a password (number of characters, whether to include numbers or special characters, etc.) and the app uses those parameters to generate a random password. While itâ€™s near the bottom of my list of to-dos, I plan to improve the design and add more functions that enable users to copy the password into their clipboard to paste wherever they need it.",
        "alt": "Andy's Password Generator App"
    }
    
]